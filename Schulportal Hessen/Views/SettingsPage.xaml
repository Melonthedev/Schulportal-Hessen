<Page
    x:Class="Schulportal_Hessen.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:Schulportal_Hessen.Helpers"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:viewmodels="using:Schulportal_Hessen.ViewModels" 
    xmlns:controls="using:CommunityToolkit.WinUI.Controls" xmlns:sys="using:System"
    xmlns:toolkit="using:Microsoft.UI.Xaml.Controls" d:DataContext="{d:DesignInstance Type=viewmodels:SettingsViewModel}"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <helpers:StringToEnumConverter x:Key="StringToEnumConverter" />
        <Flyout x:Key="colorPickerFlyout">
            <RelativePanel>
                <ColorPicker x:Name="colorPicker"
                         IsColorChannelTextInputVisible="False"
                         IsHexInputVisible="False"/>

                <Grid RelativePanel.Below="colorPicker"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Content="OK" Click="confirmColor_Click"
                        Margin="0,12,2,0" HorizontalAlignment="Stretch"/>
                    <Button Content="Cancel" Click="cancelColor_Click"
                        Margin="2,12,0,0" HorizontalAlignment="Stretch"
                        Grid.Column="1"/>
                </Grid>
            </RelativePanel>
        </Flyout>
    </Page.Resources>
    
    <Grid>
        <ScrollViewer>
            <StackPanel
                x:Name="ContentArea"
                Spacing="4"
                HorizontalAlignment="Center"
                MaxWidth="10000"
                Margin="0 10 50 10">

                <Viewbox Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="800">
                    <StackPanel 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Center"
                        Margin="0 80 0 50">
                        <Image Source="/Assets/WindowIcon.ico"
                           HorizontalAlignment="Left"
                           Width="80"
                           Height="80"
                           Grid.Column="1"/>
                        <TextBlock VerticalAlignment="Center" Margin="15" FontSize="50" FontFamily="Cascadia Code">Schulportal Hessen</TextBlock>
                    </StackPanel>
                </Viewbox>


                <TextBlock FontWeight="Bold" Margin="0 5">Apperance</TextBlock>
                
                <controls:SettingsExpander x:Name="backdropSettingsCard"
                   Description="Different backgroud blur effects for the app"
                   Header="App Backdrop"
                   HeaderIcon="{ui:FontIcon Glyph=&#xE790;}">
                    <ComboBox
                        x:Name="SystemBackdropComboBox"
                        SelectedValuePath="Tag"
                        SelectedValue="{x:Bind ViewModel.Backdrop, Mode=TwoWay}">
                        <ComboBoxItem Content="Acrylic" Tag="ACRYLIC" />
                        <ComboBoxItem Content="Mica" Tag="MICA" />
                        <ComboBoxItem Content="None" Tag="NONE" />
                        <ComboBoxItem Content="Solid Color" Tag="SOLID" />
                        <ComboBoxItem Content="Accent Color" Tag="ACCENT" />
                        <ComboBoxItem Content="Rainbow" Tag="RAINBOW" />
                        <ComboBoxItem Content="Gradient" Tag="GRADIENT" />
                        <ComboBoxItem Content="Image" Tag="IMAGE" />
                    </ComboBox>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard x:Name="backdropColorSettingsCard"
                           Description="Light Mode/Dark Mode"
                           Header="Theme"
                           HeaderIcon="{ui:FontIcon Glyph=&#xE793;}">
                            <Button x:Name="colorPickerButton" Background="Gray" Width="40" Height="40" CornerRadius="5" Flyout="{StaticResource colorPickerFlyout}">
                            </Button>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <controls:SettingsCard x:Name="themeSettingsCard"
                   Description="Light Mode/Dark Mode"
                   Header="Theme"
                   HeaderIcon="{ui:FontIcon Glyph=&#xE793;}">
                    <ComboBox
                        x:Name="SystemThemeComboBox"
                        SelectedValuePath="Tag"
                        SelectedValue="{x:Bind ViewModel.ElementTheme, Mode=TwoWay, Converter={StaticResource StringToEnumConverter}}">
                        <ComboBoxItem Content="Dark" Tag="Dark" />
                        <ComboBoxItem Content="Light" Tag="Light" />
                        <ComboBoxItem Content="Default" Tag="Default" />
                    </ComboBox>
                </controls:SettingsCard>

                <controls:SettingsCard Description="You can use a FontIcon, SymbolIcon or BitmapIcon to set the cards HeaderIcon."
                   Header="Icon options"
                   HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/AppTitleBar.scale-200.png}">
                    <ToggleSwitch />
                </controls:SettingsCard>

                <controls:SettingsCard Header="A card with custom objects as its Description">
                    <controls:SettingsCard.Description>
                        <HyperlinkButton Content="Learn more about Phone Link" />
                    </controls:SettingsCard.Description>
                    <Button Content="Open Phone Link"
        Style="{StaticResource AccentButtonStyle}" />
                </controls:SettingsCard>

                <controls:SettingsCard Description="When resizing a SettingsCard, the Content will wrap vertically. You can override this breakpoint by setting the SettingsCardWrapThreshold resource. For edge cases, you can also hide the icon by setting SettingsCardWrapNoIconThreshold."
                   Header="Adaptive layouts"
                   HeaderIcon="{ui:FontIcon Glyph=&#xE745;}">
                    <controls:SettingsCard.Resources>
                        <x:Double x:Key="SettingsCardWrapThreshold">800</x:Double>
                        <x:Double x:Key="SettingsCardWrapNoIconThreshold">600</x:Double>
                    </controls:SettingsCard.Resources>
                    <Button Content="This control will wrap vertically!"
        Style="{StaticResource AccentButtonStyle}" />
                </controls:SettingsCard>

                <controls:SettingsCard Header="This is a card with a Header only" />
                <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <TextBlock x:Uid="Settings_Theme" />

                    <StackPanel Margin="{StaticResource XSmallTopMargin}">
                        <RadioButton
                        x:Uid="Settings_Theme_Light"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                        x:Uid="Settings_Theme_Dark"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                        x:Uid="Settings_Theme_Default"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                    </StackPanel>
                </StackPanel>

                <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" />

                    <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />
                    <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
